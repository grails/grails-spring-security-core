buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "com.bmuschko:gradle-nexus-plugin:$gradleNexusPluginVersion"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
        classpath "com.gradle:build-scan-plugin:1.16"
    }
}

apply plugin: "com.gradle.build-scan"

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://repo.grails.org/grails/core' }
    }
}

ext.isSnapshot = project.projectVersion.endsWith("SNAPSHOT")
ext.isRelease = !ext.isSnapshot

if (isRelease) {
    apply plugin: 'io.codearte.nexus-staging'

    ext.nexusUsername = project.hasProperty("sonatypeOssUsername") ? project.sonatypeOssUsername : System.getenv("SONATYPE_USERNAME") ?: ''
    ext.nexusPassword = project.hasProperty("sonatypeOssPassword") ? project.sonatypeOssPassword : System.getenv("SONATYPE_PASSWORD") ?: ''
    ext.ossStagingProfileId = System.getenv("SONATYPE_STAGING_PROFILE_ID") ?: project.hasProperty("sonatypeOssStagingProfileId") ? project.sonatypeOssStagingProfileId : ''

    nexusStaging {
        numberOfRetries = 40
        packageGroup = "org.grails"
        serverUrl = "https://s01.oss.sonatype.org/service/local/"
        stagingProfileId = ossStagingProfileId
    }
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}