String versionTxt = project.projectVersion
boolean isSnapshot = versionTxt.endsWith('SNAPSHOT')
boolean isBeta = versionTxt.contains('RC') || versionTxt.contains('M')
String stableVersion = ''
String snapshotVersion = ''
String[] arr = versionTxt.tokenize('.')
int major = arr[0] as int
int minor = arr[1] as int
int patch
if (isSnapshot || isBeta || arr[2].endsWith("TEST")) {
    patch = arr[2].split('-')[0] as int
} else {
    patch = arr[2] as int
}

if (isSnapshot || isBeta) {
    stableVersion = "${major}.${minor}.${(patch-1)}".toString()
    snapshotVersion = versionTxt
} else {
    stableVersion = versionTxt
    snapshotVersion = "${major}.${minor}.${patch+1}-SNAPSHOT".toString()
}

def asciidoctorAttributes = [
        stableversion       : stableVersion,
        snapshotversion     : snapshotVersion,
        copyright           : 'Apache License, Version 2.0',
        docinfo1            : 'true',
        doctype             : 'book',
        encoding            : 'utf-8',
        icons               : 'font',
        id                  : project.name + ':' + project.version,
        idprefix            : '',
        idseparator         : '-',
        lang                : 'en',
        linkattrs           : true,
        numbered            : '',
        producer            : 'Asciidoctor',
        revnumber           : project.version,
        setanchors          : true,
        'source-highlighter' : 'prettify',
        toc                 : 'left',
        toc2                : '',
        toclevels           : '2'
]

asciidoctor {
    sourceDir file('src/docs')
    sources {
        include 'index.adoc'
    }
    outputDir = new File(buildDir, 'docs')
    attributes asciidoctorAttributes
}

tasks.register("docs") {
    group = "documentation"
    dependsOn = ["groovydoc", "asciidoctor"]
    finalizedBy "copyImages", 'createReleaseDropDown'
}

tasks.register("copyImages", Copy) {
    dependsOn = ["docs"]
    from layout.projectDirectory.dir("src/docs")
    into layout.buildDirectory.dir("docs")
    include "**/*.png"
    includeEmptyDirs = false
}

tasks.register("createReleaseDropDown", grails.plugin.springsecurity.CreateReleaseDropDownTask) {
    dependsOn = ['docs']
    mustRunAfter = ['docs']
    githubSlug = 'grails/grails-spring-security-core'
    currentVersion = project.projectVersion
    versions = ["5.3.0", "4.0.5", "3.3.2"]
    index = file("${buildDir.absolutePath}/docs/index.html")
}