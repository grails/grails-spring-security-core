buildscript {
    repositories {
        maven { url 'https://repo.grails.org/grails/core' }
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-jvm:3.3.2'
        classpath "org.asciidoctor:asciidoctor-gradle-jvm-epub:3.3.2"
        classpath "org.asciidoctor:asciidoctor-gradle-jvm-pdf:3.3.2"
    }
}

String versionTxt = project.projectVersion
boolean isSnapshot = versionTxt.endsWith('SNAPSHOT')
boolean isBeta = versionTxt.contains('RC') || versionTxt.contains('M')
String stableVersion = ''
String snapshotVersion = ''
String[] arr = versionTxt.tokenize('.')
int major = arr[0] as int
int minor = arr[1] as int
int patch
if (isSnapshot || isBeta || arr[2].endsWith("TEST")) {
    patch = arr[2].split('-')[0] as int
} else {
    patch = arr[2] as int
}

if (isSnapshot || isBeta) {
    stableVersion = "${major}.${minor}.${(patch-1)}".toString()
    snapshotVersion = versionTxt
} else {
    stableVersion = versionTxt
    snapshotVersion = "${major}.${minor}.${patch+1}-SNAPSHOT".toString()
}

def asciidoctorAttributes = [
        stableversion       : stableVersion,
        snapshotversion     : snapshotVersion,
        copyright           : 'Apache License, Version 2.0',
        docinfo1            : 'true',
        doctype             : 'book',
        encoding            : 'utf-8',
        'front-cover-image'  : 'image:cover.png[Front Cover,800,600]',
        icons               : 'font',
        id                  : project.name + ':' + project.version,
        idprefix            : '',
        idseparator         : '-',
        lang                : 'en',
        linkattrs           : true,
        numbered            : '',
        producer            : 'Asciidoctor',
        revnumber           : project.version,
        setanchors          : true,
        'source-highlighter' : 'prettify',
        toc                 : 'left',
        toc2                : '',
        toclevels           : '2'
]

repositories {
    ruby.gems()
}

asciidoctor {
    sourceDir file('src/docs')
    sources {
        include 'index.adoc'
    }
    outputDir = new File(buildDir, 'docs')
    attributes asciidoctorAttributes
}

asciidoctorPdf {
    dependsOn asciidoctorGemsPrepare
    sourceDir = file('src/docs')
    sources {
        include 'index.adoc'
    }
    outputDir = new File(buildDir, 'docs')

    asciidoctorj {
        requires 'rouge'
        attributes asciidoctorAttributes
    }
}

asciidoctorEpub {
    dependsOn asciidoctorGemsPrepare
    sourceDir = file('src/docs')
    sources {
        include 'index.adoc'
    }
    outputDir = new File(buildDir, 'docs')

    asciidoctorj {
        requires 'rouge'
        attributes asciidoctorAttributes
    }

    ebookFormats = ["EPUB3"]
}

tasks.named("asciidoctor").configure {
    dependsOn = ['asciidoctorPdf', 'asciidoctorEpub']
}

tasks.register("docs").configure {
    group = "documentation"
    dependsOn = ["groovydoc", "asciidoctor"]
    doLast {
        File dir = new File(buildDir, 'docs')
        ['epub', 'mobi', 'pdf'].each { String ext ->
            File f = new File(dir, 'index.' + ext)
            if (f.exists()) {
                f.renameTo new File(dir, project.name + '.' + ext)
            }
        }

        new File(buildDir, 'docs/ghpages.html') << file('src/docs/index.tmpl').text.replaceAll('@VERSION@', project.version)

        copy {
            from 'src/docs'
            into new File(buildDir, 'docs').path
            include '**/*.png'
            includeEmptyDirs = false
        }
    }
}

dependencies {
    asciidoctorGems 'rubygems:rouge:3.15.0'
}