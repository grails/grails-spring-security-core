plugins {
	id 'groovy'
	id 'java-library'
	id 'org.grails.grails-gsp'
	id 'org.grails.grails-plugin'
	id 'maven-publish'
	id 'signing'
}

group = 'org.grails.plugins'

configurations {
    all {
        exclude group: 'javax.servlet'
    }
}

dependencies {

	api libs.grails.core
	api libs.grails.datastore.core // API because used in templates
	api libs.grails.datastore.gorm // API because used in templates
	api libs.grails.events.transform // API because used in templates
	api libs.grails.mimetypes
	api libs.grails.plugin.async // AsyncGrailsWebRequest is used in public API
	api libs.grails.web.common
	api libs.grails.web.urlmappings
	api libs.spring.beans
	api libs.spring.context.core
	api libs.spring.expression
	api libs.spring.security.core
	api libs.spring.security.web
	api libs.spring.web

	implementation libs.commons.text
	implementation libs.ehcache
	implementation libs.grails.bootstrap
	implementation libs.grails.converters
	implementation libs.grails.rest
	implementation libs.springboot.core
	implementation libs.spring.context.support
	implementation libs.spring.core
	implementation libs.spring.security.crypto
	implementation libs.spring.tx

	compileOnly libs.groovy.core // Compile-time annotations
	compileOnly libs.jakarta.servlet.api // Provided
	compileOnly libs.slf4j.nop // Prevents warnings about missing slf4j implementation during compilation

	testImplementation libs.bundles.grails.testing.support
	testImplementation libs.spock.core
	testImplementation libs.spring.test
	testImplementation libs.spring.security.config

	testRuntimeOnly libs.slf4j.nop // Prevents warnings about missing slf4j implementation during tests
}

apply from: rootProject.layout.projectDirectory.file('gradle/java-config.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/groovy-config.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/grails-plugin-config.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/test-config.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/cleanBuild.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/publishing.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/docs.gradle')
