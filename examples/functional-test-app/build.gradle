plugins {
    id 'application'
    id 'groovy'
    id 'org.grails.grails-gsp'
    id 'org.grails.grails-web'
    id 'com.bertramlabs.asset-pipeline'
}

group = 'examples.test'

configurations {
    all {
        exclude group: 'io.micronaut', module:'micronaut-inject-groovy'
    }
}

dependencies {

    implementation project(':spring-security-core')

    implementation libs.grails.core
    implementation libs.grails.datastore.core
    implementation libs.grails.datastore.gorm
    implementation libs.grails.events.transform
    implementation libs.grails.gsp
    implementation libs.grails.rest
    implementation libs.grails.validation
    implementation libs.groovy.core
    implementation libs.spring.security.core
    implementation libs.spring.web

    runtimeOnly libs.micronaut.jackson.databind
    runtimeOnly libs.gorm.hibernate5
    runtimeOnly libs.grails.asset.pipeline
    runtimeOnly libs.grails.i18n
    runtimeOnly libs.grails.interceptors
    runtimeOnly libs.grails.services
    runtimeOnly libs.grails.urlmappings
    runtimeOnly libs.springboot.autoconfigure
    runtimeOnly libs.springboot.starter.logging
    runtimeOnly libs.springboot.starter.tomcat
    runtimeOnly libs.h2database
    runtimeOnly libs.tomcat.jdbc

    compileOnly libs.jakarta.annotation.api
    compileOnly libs.jakarta.servlet.api
    compileOnly libs.slf4j.nop // Prevent warnings about missing SLF4j implementation during GSP compilation
}

apply from: rootProject.layout.projectDirectory.file('gradle/java-config.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/groovy-config.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/test-config.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/integrationTest.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/examples-config.gradle')
