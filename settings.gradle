plugins {
    id 'com.gradle.enterprise' version '3.16.2'
    id 'com.gradle.common-custom-user-data-gradle-plugin' version '1.13'
}

gradleEnterprise {
    server = 'https://ge.grails.org'
    buildScan {
        publishAlwaysIf(System.getenv('CI') == 'true')
        publishIfAuthenticated()
        uploadInBackground = System.getenv('CI') == null
        capture {
            taskInputFiles = true
        }
    }
}

buildCache {
    local { enabled = System.getenv('CI') != 'true' }
    remote(gradleEnterprise.buildCache) {
        def isAuthenticated = System.getenv('GRADLE_ENTERPRISE_ACCESS_KEY')
        push = System.getenv('CI') == 'true' && isAuthenticated
        enabled = true
    }
}

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            def groovyVersion = System.getenv('GROOVY_VERSION')
            if (groovyVersion) {
                logger.warn "Using custom version $groovyVersion of Groovy due to GROOVY_VERSION being set."
                version('groovy', groovyVersion)
            }
        }
    }
}

rootProject.name = 'grails-spring-security-core'

include 'plugin'
include 'examples-functional-test-app'
include 'examples-integration-test-app'
include 'examples-misc-group'
include 'examples-misc-hierarchical-roles'

project(':plugin').name = 'spring-security-core'
project(':examples-functional-test-app'    ).projectDir = [settingsDir, 'examples/functional-test-app'] as File
project(':examples-integration-test-app'   ).projectDir = [settingsDir, 'examples/integration-test-app'] as File
project(':examples-misc-group'             ).projectDir = [settingsDir, 'examples/misc-functional-test-app/grails-spring-security-group'] as File
project(':examples-misc-hierarchical-roles').projectDir = [settingsDir, 'examples/misc-functional-test-app/grails-spring-security-hierarchical-roles'] as File